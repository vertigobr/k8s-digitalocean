name: deploy

on:
  push:
    branches:
      - "*"
      - "*/*"
      - "**"
      #- "!master"
jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v2
      - uses: actions/cache@v3
        with:
          path: |
            .terraform/**
            .terraform.lock.hcl
            plan.cache
          key: terraform-lock-${{ steps.extract_branch.outputs.branch }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY}}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Terraform Init
        id: init
        run: |
             cat main.tf 
             terraform init

  apply:
    runs-on: ubuntu-latest
    needs: init
#    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
#        with:
#          terraform_version: 1.3.0
#          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - uses: actions/cache@v3
        with:
          path: |
            .terraform/**
            .terraform.lock.hcl
            plan.cache
          key: terraform-lock-${{ github.event.workflow_run.head_branch }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY}}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -out plan.cache 
#      - name: encrypt cache
#        run: zip --password "${{ secrets.ZIP_PASSWORD }}" plan.zip plan.cache
#      - name: "Upload Artifact"
#        uses: actions/upload-artifact@v2
#        with:
#          name: plan-cache
#         path: plan.cache
      - name: Terraform apply
        run: terraform apply -input=false -no-color -auto-approve plan.cache
